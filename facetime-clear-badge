#!/usr/bin/env -S osascript -l JavaScript
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var stdlib_1 = require("../lib/stdlib");
var quit = function (appl, status) {
    if (status === void 0) { status = 0; }
    appl.quit();
    stdlib_1.exit(status);
};
var app = Application('FaceTime');
app.activate();
delay(2);
var se = Application('System Events');
var ft = se.processes['FaceTime'];
ft.visible = false;
var group = ft.windows[0].radioGroups[0];
for (var _i = 0, _a = [1, 0, 1, 0]; _i < _a.length; _i++) {
    var x = _a[_i];
    try {
        group.radioButtons[x].click();
        // tslint:disable-next-line:no-magic-numbers
        delay(0.25);
    }
    catch (e) {
        quit(app, 1);
    }
}
delay(1);
quit(app);

},{"../lib/stdlib":2}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
ObjC.import('stdlib');
ObjC.bindFunction('free', ['void', ['void*']]);
ObjC.bindFunction('malloc', ['void*', ['int']]);
exports._Exit = $._Exit;
exports.abort = $.abort;
exports.atexit = $.atexit;
exports.arc4random = $.arc4random;
exports.arc4random_addrandom = $.arc4random_addrandom;
exports.arc4random_buf = $.arc4random_buf;
exports.arc4random_stir = $.arc4random_stir;
exports.arc4random_uniform = $.arc4random_uniform;
exports.atof = $.atof;
exports.atoi = $.atoi;
exports.atoll = $.atoll;
exports.exit = $.exit;
exports.free = $.free;
/** Will throw if the environment variable does not exist. */
exports.getenv = $.getenv;
exports.malloc = $.malloc;
exports.putenv = $.putenv;
exports.rand = $.rand;
exports.setenv = $.setenv;
exports.srand = $.srand;
exports.strtod = $.strtod;
exports.strtof = $.strtof;
exports.strtold = $.strtold;
exports.system = $.system;
exports.unsetenv = $.unsetenv;

},{}]},{},[1]);
